unsigned short kp, cnt, oldstate = 0;
int numeroReal=0;
unsigned int temp_res;
unsigned short T_Byte1, T_Byte2, RH_Byte1, RH_Byte2;

char txt[6];
char numero[2];
 char numero1[2];
// Keypad module connections
char  keypadPort at PORTD;
// End Keypad module connections

// LCD module connections
sbit LCD_RS at RB4_bit;
sbit LCD_EN at RB5_bit;
sbit LCD_D4 at RB0_bit;
sbit LCD_D5 at RB1_bit;
sbit LCD_D6 at RB2_bit;
sbit LCD_D7 at RB3_bit;

sbit LCD_RS_Direction at TRISB4_bit;
sbit LCD_EN_Direction at TRISB5_bit;
sbit LCD_D4_Direction at TRISB0_bit;
sbit LCD_D5_Direction at TRISB1_bit;
sbit LCD_D6_Direction at TRISB2_bit;
sbit LCD_D7_Direction at TRISB3_bit;
  int contador=0;
// End LCD module connections

void main() {
int a=0;
  cnt = 0;                                 // Reset counter
  Keypad_Init();                           // Initialize Keypad
         ANSEL  = 0;              // Configure AN2 pin as analog
  ANSELH = 0;
  Lcd_Init();                              // Initialize LCD
  Lcd_Cmd(_LCD_CLEAR);                     // Clear display
  Lcd_Cmd(_LCD_CURSOR_OFF);                // Cursor off
  //Lcd_Out(1, 1, "1");
  Lcd_Out(1, 1, "valor  :");                 // Write message text on LCD
 //Lcd_Out(2, 1, "Times:");
//     llenar();


   ANSEL  = 0x07;              // Configure AN2 pin as analog
  ANSELH =0;                 // Configure other AN pins as digital I/O
  C1ON_bit = 0;               // Disable comparators
  C2ON_bit = 0;

  TRISE  = 0xFF;              // PORTA is input
  TRISC  = 0;                 // PORTC is output
  TRISD  = 0;

  do {
   temp_res = ADC_Read(7);
   //temp_res=temp_res * 0.004883;
       a=   temp_res * .4887585;
    PORTD = temp_res;         // Send lower 8 bits to PORTB
    PORTC = temp_res >> 8;    // Send 2 most significant bits to RC1, RC0

    txt[0]=(a/100)+48;
    txt[1]=((a%100)/10)+48;
   txt[2]=((a%100)%10)+48  ;
  // WordToStr(a, txt);
      Lcd_Out(2, 1,txt);
  } while(1);



}